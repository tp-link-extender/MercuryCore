<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
  <Item class="ReflectionMetadataClasses">
    <Properties></Properties>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BindableFunction</string>
        <string name="summary">Allow functions defined in one script to be called by another script</string>
        <string name="ExplorerOrder">4</string>
        <string name="ExplorerImageIndex">66</string>
      </Properties>

      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Invoke</string>
            <string name="summary">Causes the function assigned to OnInvoke to be called. Arguments passed to this function get passed to OnInvoke function.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataCallbacks">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">OnInvoke</string>
            <string name="summary">Should be defined as a function. This function is called when Invoke() is called. Number of arguments is variable.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BindableEvent</string>
        <string name="summary">Allow events defined in one script to be subscribed to by another script</string>

        <string name="ExplorerOrder">5</string>
        <string name="ExplorerImageIndex">67</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Fire</string>
            <string name="summary">Used to make the custom event fire (see Event for more info). Arguments can be variable length.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Event</string>
            <string name="summary">This event fires when the Fire() method is used.  Receives the variable length arguments from Fire().</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TouchTransmitter</string>
        <string name="summary">Used by networking and replication code to transmit touch events - no other purpose</string>

        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">37</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ForceField</string>
        <string name="summary">Prevents joint breakage from explosions, and stops Humanoids from taking damage</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">37</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PluginManager</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TeleportService</string>
        <string name="summary">Allows players to seamlessly leave a game and join another</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StudioTool</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Plugin</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PluginMouse</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Glue</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CollectionService</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">JointsService</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BadgeService</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">AssetService</string>
        <string name="summary">A service used to set and get information about assets stored on the Roblox website.</string>
      </Properties>
      <Item class="ReflectionMetadataYieldFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">RevertAsset</string>
            <string name="summary">Reverts a given place id to the version number provided. Returns true if successful on reverting, false otherwise.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetPlacePermissions</string>
            <string name="summary">Sets the permissions for a placeID to the place accessType. An optional table (inviteList) can be included that will set the accessType for only the player names provided. The table should be set up as an array of usernames (strings).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetPlacePermissions</string>
            <string name="summary">Given a placeID, this function will return a table with the permissions of the place. Useful for determining what kind of permissions a particular user may have for a place.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetAssetVersions</string>
            <string name="summary">Given a placeID, this function will return a table with the version info of the place. An optional arg of page number can be used to page through all revisions (a single page may hold about 50 revisions).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetCreatorAssetID</string>
            <string name="summary">Given a creationID, this function will return the asset that created the creationID. If no other asset created the given creationID, 0 is returned.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">HttpService</string>
        <string name="ExplorerOrder">101</string>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">HttpEnabled</string>
            <bool name="Browsable">true</bool>
            <string name="summary">Enabling http requests from scripts</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">InsertService</string>
        <string name="summary">A service used to insert objects stored on the website into the game.</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetCollection</string>
            <string name="summary">Returns a table for the assets stored in the category.  A category is an setId from www.roblox.com that links to a set.  &lt;a href="http://wiki.roblox.com/index.php/GetCollection_(Method)" target="_blank"&gt;More info on table format&lt;/a&gt;. &lt;a href="http://wiki.roblox.com/index.php/Sets" target="_blank"&gt;More info on sets&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Insert</string>
            <string name="summary">Inserts the Instance into the workspace.  It is recommended to use Instance.Parent = game.Workspace instead, as this can cause issues currently.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ApproveAssetId</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ApproveAssetVersionId</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataYieldFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetBaseSets</string>
            <string name="summary">Returns a table containing a list of the various setIds that are ROBLOX approved. &lt;a href="http://wiki.roblox.com/index.php/Sets" target="_blank"&gt;More info on sets&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetUserSets</string>
            <string name="summary">Returns a table containing a list of the various setIds that correspond to argument 'userId'. &lt;a href="http://wiki.roblox.com/index.php/Sets" target="_blank"&gt;More info on sets&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetBaseCategories</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use GetBaseSets() instead.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetUserCategories</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use GetUserSets() instead.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">LoadAsset</string>
            <string name="summary">Returns a Model containing the Instance that resides at AssetId on the web. This call will also yield the script until the model is returned. Script execution can still continue, however, if you use a &lt;a href="http://wiki.roblox.com/index.php/Function_Dump/Coroutine_Manipulationcoroutine" target="_blank"&gt;coroutine&lt;/a&gt;.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">LoadAssetVersion</string>
            <string name="summary">Similar to LoadAsset, but instead an AssetVersionId is passed in, which refers to a particular version of the asset which is not neccessarily the latest version.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Hat</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">45</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">LocalBackpack</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">LocalBackpackItem</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">MotorFeature</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Mouse</string>
        <string name="summary">Used to receive input from the user. Actually tracks mouse events and keyboard events.</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Hit</string>
            <string name="summary">The CoordinateFrame of where the Mouse ray is currently hitting a 3D object in the Workspace.  If the mouse is not over any 3D objects in the Workspace, this property is nil.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Icon</string>
            <string name="summary">The current Texture of the Mouse Icon. Stored as a string, for more information on how to format the string &lt;a href="http://wiki.roblox.com/index.php/Content" target="_blank"&gt;go here&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Origin</string>
            <string name="summary">The CoordinateFrame of where the Mouse is when the mouse is not clicking.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Origin</string>
            <string name="summary">The CoordinateFrame of where the Mouse is when the mouse is not clicking.  This CoordinateFrame will be very close to the Camera.CoordinateFrame.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Target</string>
            <string name="summary">The Part the mouse is currently over. If the mouse is not currently over any object (on the skybox, for example) this property is nil.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TargetFilter</string>
            <string name="summary">A Part or Model that the Mouse will ignore when trying to find the Target, TargetSurface and Hit.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TargetSurface</string>
            <string name="summary">The NormalId (Top, Left, Down, etc.) of the face of the part the Mouse is currently over.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">UnitRay</string>
            <string name="summary">The Unit Ray from where the mouse is (Origin) to the current Mouse.Target.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ViewSizeX</string>
            <string name="summary">The viewport's (game window) width in pixels.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ViewSizeY</string>
            <string name="summary">The viewport's (game window) height in pixels.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">X</string>
            <string name="summary">The absolute pixel position of the Mouse along the x-axis of the viewport (game window). Values start at 0 on the left hand side of the screen and increase to the right.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Y</string>
            <string name="summary">The absolute pixel position of the Mouse along the y-axis of the viewport (game window). Values start at 0 on the stop of the screen and increase to the bottom.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Button1Down</string>
            <string name="summary">Fired when the first button (usually the left, but could be another) on the mouse is depressed.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Button1Up</string>
            <string name="summary">Fired when the first button (usually the left, but could be another) on the mouse is release.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Button2Down</string>
            <string name="summary">This event is currently non-operational.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Button2Up</string>
            <string name="summary">This event is currently non-operational.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Idle</string>
            <string name="summary">Fired constantly when the mouse is not firing any other event (i.e. the mouse isn't moving, nor any buttons being pressed or depressed).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">KeyDown</string>
            <string name="summary">Fired when a user presses a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">KeyUp</string>
            <string name="summary">Fired when a user releases a key on the keyboard. Argument is a string representation of the key.  If the key has no string representation (such as space), the string passed in is the keycode for that character. Keycodes are currently in ASCII.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Move</string>
            <string name="summary">Fired when the mouse X or Y member changes.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">WheelBackward</string>
            <string name="summary">This event is currently non-operational.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">WheelForward</string>
            <string name="summary">This event is currently non-operational.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ProfilingItem</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ChangeHistoryService</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RotateP</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RotateV</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ScriptContext</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Selection</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">VelocityMotor</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Weld</string>
        <string name="ExplorerOrder">20</string>
        <string name="ExplorerImageIndex">34</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TaskScheduler</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetThreadShare</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StatsItem</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Snap</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">FileMesh</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ClickDetector</string>
        <string name="summary">Raises mouse events for parent object</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">41</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MaxActivationDistance</string>
            <string name="summary">The maximum distance a Player's character can be from the ClickDetector's parent Part that will allow the Player's mouse to fire events on this object.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseClick</string>
            <string name="summary">Fired when a player clicks on the parent Part of ClickDetector. The argument provided is always of type Player.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseHoverEnter</string>
            <string name="summary">Fired when a player's mouse enters on the parent Part of ClickDetector. The argument provided is always of type Player.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseHoverLeave</string>
            <string name="summary">Fired when a player's mouse leaves the parent Part of ClickDetector. The argument provided is always of type Player.</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Clothing</string>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Smoke</string>
        <string name="summary">Makes the parent part or model object emit smoke</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">59</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Sparkles</string>
        <string name="summary">Makes the parent part or model object fantastic</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">42</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Explosion</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">36</string>
        <string name="summary">Creates an Explosion! This can be used as a purely graphical effect, or can be made to damage objects.</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BlastPressure</string>
            <string name="summary">How much force this Explosion exerts on objects within it's BlastRadius. Setting this to 0 creates a purely graphical effect. A larger number will cause Parts to fly away at higher velocities.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BlastRadius</string>
            <string name="summary">How big the Explosion is. This is a circle starting from the center of the Explosion's Position, the larger this property the larger the circle of destruction.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Position</string>
            <string name="summary">Where the Explosion occurs in absolute world coordinates.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ExplosionType</string>
            <string name="summary">Defines the behavior of the Explosion. &lt;a href="http://wiki.roblox.com/index.php/ExplosionType_(Enum)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Fire</string>
        <string name="summary">Makes the parent part or model object emit fire</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">61</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Color</string>
            <string name="summary">The color of the base of the fire.  See SecondaryColor for more.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Heat</string>
            <string name="summary">How hot the fire appears to be. The flame moves quicker the higher this value is set.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SecondaryColor</string>
            <string name="summary">The color the fire interpolates to from Color. The longer a particle exists in the fire, the close to this color it becomes.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Size</string>
            <string name="summary">How large the fire appears to be.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Seat</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">35</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Platform</string>

        <string name="summary">Equivalent to a seat, except that the character stands up rather than sits down.</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">35</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SkateboardPlatform</string>

        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">35</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">VehicleSeat</string>
        <string name="summary">Automatically finds and powers hinge joints in an assembly.  Ignores motors.</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">35</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Tool</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">17</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Flag</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">38</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CanBeDropped</string>
            <string name="summary">If someone is carrying this flag, this bool determines whether or not they can drop it and run.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TeamColor</string>
            <string name="summary">The Team this flag is for. Corresponds with the TeamColors in the Teams service.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">FlagStand</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">39</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BackpackItem</string>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Decal</string>
        <string name="ExplorerOrder">4</string>
        <string name="ExplorerImageIndex">7</string>
        <string name="summary">Descibes a texture that is placed on one of the sides of the Part it is parented to.</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Face</string>
            <string name="summary">Describes the face of the Part the decal will be applied to. &lt;a href="http://wiki.roblox.com/index.php/NormalId_(Enum)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Shiny</string>
            <string name="summary">How much light will appear to reflect off of the decal.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Specular</string>
            <string name="summary">How light will react to the surface of the decal.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Transparency</string>
            <string name="summary">How visible the decal is.  1 is completely invisible, while 0 is completely opaque</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">JointInstance</string>
        <string name="ExplorerOrder">20</string>
        <string name="ExplorerImageIndex">34</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Message</string>
        <string name="ExplorerOrder">11</string>
        <string name="ExplorerImageIndex">33</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Hint</string>
        <bool name="Deprecated">true</bool>
        <string name="ExplorerOrder">11</string>
        <string name="ExplorerImageIndex">33</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">IntValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a int value in it's Value member. Useful to share int information across multiple scripts.</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RayValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a Ray value in it's Value member. Useful to share Ray information across multiple scripts.</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">IntConstrainedValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores an int value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share int information across multiple scripts.</string>
      </Properties>
      <Item class="ReflectionMetadataMember">
        <Properties>
          <string name="Name">MaxValue</string>
          <string name="summary">The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue</string>
        </Properties>
      </Item>
      <Item class="ReflectionMetadataMember">
        <Properties>
          <string name="Name">MinValue</string>
          <string name="summary">The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue</string>
        </Properties>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DoubleConstrainedValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a double value in it's Value member.  Value is clamped to be in range of Min and MaxValue. Useful to share double information across multiple scripts.</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MaxValue</string>
            <string name="summary">The maximum we allow this Value to be set.  If Value is set higher than this, it automatically gets adjusted to MaxValue</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MinValue</string>
            <string name="summary">The minimum we allow this Value to be set.  If Value is set lower than this, it automatically gets adjusted to MinValue</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BoolValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a boolean value in it's Value member. Useful to share boolean information across multiple scripts.</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CustomEvent</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CustomEventReceiver</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TextureTrail</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">FloorWire</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Renders a thin cylinder than can be adorned with textures that 'flow' from one object to the next. Has basic pathing abilities and attempts to to not intersect anything. &lt;a href="http://wiki.roblox.com/index.php/FloorWire_Guide" target="_blank"&gt;More info&lt;/a&gt;</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CycleOffset</string>
            <string name="summary">Controls how the decals are positioned along the wire. &lt;a href="http://wiki.roblox.com/index.php/CycleOffset_(Property)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">From</string>
            <string name="summary">The object the FloorWire 'emits' from</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">StudsBetweenTextures</string>
            <string name="summary">The space between two textures on the wire. Note: studs are relative depending on how far the camera is from the FloorWire.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Texture</string>
            <string name="summary">The image we use to render the textures that flow from beginning to end of the FloorWire.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TextureSize</string>
            <string name="summary">The size in studs of the Texture we use to flow from one object to the next.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">To</string>
            <string name="summary">The object the FloorWire 'emits' to</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Velocity</string>
            <string name="summary">The rate of travel that the textures flow along the wire.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">WireRadius</string>
            <string name="summary">How thick the wire is.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NumberValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StringValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Vector3Value</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CFrameValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a CFrame value in it's Value member. Useful to share CFrame information across multiple scripts.</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Color3Value</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a Color3 value in it's Value member. Useful to share Color3 information across multiple scripts.</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BrickColorValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
        <string name="summary">Stores a BrickColor value in it's Value member. Useful to share BrickColor information across multiple scripts.</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ObjectValue</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">4</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SpecialMesh</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">8</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BlockMesh</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">8</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CylinderMesh</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">8</string>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BevelMesh</string>
        <bool name="Browsable">false</bool>
        <bool name="Deprecated">true</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DataModelMesh</string>
        <bool name="Browsable">false</bool>

      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Texture</string>
        <string name="ExplorerOrder">4</string>
        <string name="ExplorerImageIndex">10</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Sound</string>
        <string name="ExplorerOrder">1</string>
        <string name="ExplorerImageIndex">11</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">play</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use Play() instead</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">PlayOnRemove</string>
            <string name="summary">The sound will play when it is removed from the Workspace. Looped sounds don't play</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StockSound</string>
        <string name="Browsable">false</string>
        <string name="ExplorerOrder">-1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SoundService</string>
        <string name="ExplorerOrder">50</string>
        <string name="ExplorerImageIndex">31</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AmbientReverb</string>

            <string name="summary">The ambient sound environment.  May not work when using hardware sound</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DopplerScale</string>

            <string name="summary">The doppler scale is a general scaling factor for how much the pitch varies due to doppler shifting in 3D sound. Doppler is the pitch bending effect when a sound comes towards the listener or moves away from it, much like the effect you hear when a train goes past you with its horn sounding. With dopplerscale you can exaggerate or diminish the effect.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DistanceFactor</string>

            <string name="summary">the relative distance factor, compared to 1.0 meters.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">RolloffScale</string>

            <string name="summary">Setting this value makes the sound drop off faster or slower. The higher the value, the faster volume will attenuate, and conversely the lower the value, the slower it will attenuate. For example a rolloff factor of 1 will simulate the real world, where as a value of 2 will make sounds attenuate 2 times quicker.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Backpack</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">20</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StarterPack</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">20</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StarterGear</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">20</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">StarterGui</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">46</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CoreGui</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerImageIndex">46</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">MarketplaceService</string>
        <string name="ExplorerImageIndex">46</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">PromptPurchase</string>
            <string name="summary">Will prompt 'player' to purchase the item associated with 'assetId'.  'equipIfPurchased' is an optional argument that will give the item to the player immediately if they buy it (only applies to gear).  'currencyType' is also optional and will attempt to prompt the user with a specified currency if the product can be purchased with this currency, otherwise we use the default currency of the product.</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataYieldFunctions">
         <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetProductInfo</string>
            <string name="summary">Takes one argument "assetId" which should be a number of an asset on www.roblox.com.  Returns a table containing the product information (if this process fails, returns an empty table).</string>
          </Properties>
          <Properties>
            <string name="Name">PlayerOwnsAsset</string>
            <string name="summary">Checks to see if 'Player' owns the product associated with 'assetId'. Returns true if the player owns it, false otherwise. This call will produce a warning if called on a guest player.</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataEvents">
          <Item class="ReflectionMetadataMember">
            <Properties>
              <string name="Name">PromptPurchaseFinished</string>
              <string name="summary">Fired when a 'player' dismisses a purchase dialog for 'assetId'.  If the player purchased the item 'isPurchased' will be true, otherwise it will be false. This call will produce a warning if called on a guest player.</string>
            </Properties>
          </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Sky</string>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">28</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Motor</string>

        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Humanoid</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">9</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MoveTo</string>
            <string name="summary">Attempts to move the Humanoid and it's associated character to 'part'. 'location' is used as an offset from part's origin.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Jump</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Sit</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TakeDamage</string>
            <string name="summary">Decreases health by the amount.  Use this instead of changing health directly to make sure weapons are filtered for things such as ForceField(s).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">UnequipTools</string>

            <string name="summary">Takes any active gear/tools that the Humanoid is using and puts them into the backpack.  This function only works on Humanoids with a corresponding Player.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">EquipTool</string>

            <string name="summary">Takes a specified tool and equips it to the Humanoid's Character.  Tool argument should be of type 'Tool'.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">NameOcclusion</string>

            <string name="summary">Sets how to display other humanoid names to this humanoid's player. &lt;a href="http://wiki.roblox.com/index.php/NameOcclusion_(Enum)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
          <Properties>
            <string name="Name">Health</string>
            <string name="summary">How many hit points the Humanoid has.  When this number reaches 0 or goes below 0, the Humanoid's character falls apart and will respawn.</string>
          </Properties>
          <Properties>
            <string name="Name">MaxHealth</string>
            <string name="summary">The maximum number of hit points a Humanoid's health can reach.  If the Humanoid's health is set over this amount, the health gets set to this value.</string>
          </Properties>
          <Properties>
            <string name="Name">TargetPoint</string>
            <string name="summary">The location that the Humanoid is trying to walk to.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyColors</string>

        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Shirt</string>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">43</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Pants</string>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">44</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ShirtGraphic</string>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">40</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Skin</string>

        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DebugSettings</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">FaceInstance</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">GameSettings</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">GlobalSettings</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Item</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NetworkPeer</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NetworkSettings</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PVInstance</string>
        <bool name="Browsable">false</bool>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CoordinateFrame</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use CFrame instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RenderSettings</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RootInstance</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ServiceProvider</string>
        <bool name="Browsable">false</bool>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">service</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use GetService() instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ProfilingItem</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NetworkMarker</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Hopper</string>
        <bool name="Deprecated">true</bool>
        <string name="summary">Use StarterPack instead</string>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Instance</string>
        <bool name="Browsable">false</bool>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Archivable</string>
            <string name="summary">Determines whether or not an Instance can be saved when the game closes/attempts to save the game. Note: this only applies to games that use Data Persistence, or Personal Build Servers.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ClassName</string>
            <string name="summary">The string name of this Instance's most derived class.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Parent</string>
            <string name="summary">The Instance that is directly above this Instance in the tree.</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataFunctions">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetDebugId</string>
            <bool name="Browsable">false</bool>
            <string name="summary">This function is for internal testing. Don't use in production code</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Clone</string>
            <string name="summary">Returns a copy of this Object and all its children. The copy's Parent is nil</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">clone</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use Clone() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">isA</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use IsA() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">IsA</string>
            <string name="summary">Returns a boolean if this Instance is of type 'className' or a is a subclass of type 'className'.  If 'className' is not a valid class type in ROBLOX, this function will always return false.  &lt;a href="http://wiki.roblox.com/index.php/IsA" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FindFirstChild</string>
            <string name="summary">Returns the first child of this Instance that matches the first argument 'name'.  The second argument 'recursive' is an optional boolean (defaults to false) that will force the call to traverse down thru all of this Instance's descendants until it finds an object with a name that matches the 'name' argument.  The function will return nil if no Instance is found.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetFullName</string>
            <string name="summary">Returns a string that shows the path from the root node (DataModel) to this Instance.  This string does not include the root node (DataModel).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">children</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use GetChildren() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">getChildren</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use GetChildren() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetChildren</string>
            <string name="summary">Returns a read-only table of this Object's children</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Remove</string>
            <string name="summary">Deprecated. Use ClearAllChildren() to get rid of all child objects, or Destroy() to invalidate this object and its descendants</string>
            <bool name="Deprecated">true</bool>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">remove</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use Remove() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ClearAllChildren</string>
            <string name="summary">Removes all children (but not this object) from the workspace.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Destroy</string>
            <string name="summary">Removes object and all of its children from the workspace. Disconnects object and all children from open connections. Object and children may not be usable after calling Destroy.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">findFirstChild</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use FindFirstChild() instead</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AncestryChanged</string>
            <string name="summary">Fired when any of this object's ancestors change.  First argument 'child' is the object whose parent changed.  Second argument 'parent' is the first argument's new parent.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DescendantAdded</string>
            <string name="summary">Fired after an Instance is parented to this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DescendantRemoving</string>
            <string name="summary">Fired after an Instance is unparented from this object, or any of this object's descendants.  The 'descendant' argument is the Instance that is being added.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Changed</string>
            <string name="summary">Fired after a property changes value.  The property argument is the name of the property</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyGyro</string>
        <string name="summary">Attempts to maintain a fixed orientation of its parent Part</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">maxTorque</string>
            <string name="summary">The maximum torque that will be exerted on the Part</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">D</string>
            <string name="summary">The dampening factor applied to this force</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">P</string>
            <string name="summary">The power continually applied to this force</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">cframe</string>
            <string name="summary">the cframe that this force is trying to orient its parent Part to.  Note: this force only uses the rotation of the cframe, not the position.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyPosition</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">maxForce</string>
            <string name="summary">The maximum force that will be exerted on the Part</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">D</string>
            <string name="summary">The dampening factor applied to this force</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">P</string>
            <string name="summary">The power factor continually applied to this force</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">position</string>
            <string name="summary">The Vector3 that this force is trying to position its parent Part to.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RocketPropulsion</string>

        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
        <string name="summary">A propulsion system that mimics a rocket</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyVelocity</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">maxForce</string>
            <string name="summary">The maximum force that will be exerted on the Part in each axis</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">P</string>
            <string name="summary">The amount of power we add to the system.  The higher the power, the quicker the force will achieve its goal.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">velocity</string>
            <string name="summary">The velocity this system tries to achieve.  How quickly the system reaches this velocity (if ever) is defined by P.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyAngularVelocity</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <string name="Name">maxTorque</string>
          <string name="summary">The maximum torque that will be exerted on the Part in each axis</string>
        </Item>
        <Item class="ReflectionMetadataMember">
          <string name="Name">P</string>
          <string name="summary">The amount of power we add to the system.  The higher the power, the quicker the force will achieve its goal.</string>
        </Item>
        <Item class="ReflectionMetadataMember">
          <string name="Name">angularVelocity</string>
          <string name="summary">The rotational velocity this system tries to achieve.  How quickly the system reaches this velocity is defined by P.</string>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyForce</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
        <string name="summary">When parented to a physical part, BodyForce will continually exert a force upon its parent object.</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <string name="Name">force</string>
          <string name="summary">The continual force exerted on an object, defined in each axis.</string>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BodyThrust</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">14</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">force</string>
            <string name="summary">The power continually applied to this force</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">location</string>
            <string name="summary">The Vector3 location of where to apply the force to. </string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Hole</string>

        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Feature</string>
        <string name="ExplorerOrder">0</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Teams</string>
        <string name="summary">This Service-level object is the container for all Team objects in a level. A map that supports team games must have a Teams service. &lt;a href="http://wiki.roblox.com/index.php/Team" target="_blank"&gt;More info&lt;/a&gt;</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">23</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Team</string>
        <string name="summary">The Team class is used to represent a faction in a team game. The only valid location for a Team object is under the Teams service. &lt;a href="http://wiki.roblox.com/index.php/Team" target="_blank"&gt;More info&lt;/a&gt;</string>
        <string name="ExplorerOrder">1</string>
        <string name="ExplorerImageIndex">24</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SpawnLocation</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">25</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NetworkClient</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">16</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NetworkServer</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">15</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Script</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">6</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">LinkedScript</string>

            <string name="summary">This property is under development. Do not use</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">LocalScript</string>
        <string name="ExplorerOrder">4</string>
        <string name="ExplorerImageIndex">18</string>
        <string name="summary">A script that runs on clients, NOT servers.  LocalScripts can only run when parented under the PlayerGui currently.</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NetworkReplicator</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">29</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Model</string>
        <string name="ExplorerOrder">10</string>
        <string name="ExplorerImageIndex">2</string>
        <string name="summary">A construct used to group Parts and other objects together</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BreakJoints</string>
            <string name="summary">Breaks all surface joints contained within</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetModelCFrame</string>
            <string name="summary">Returns a CFrame that has position of the centroid of all Parts in the Model.  The rotation matrix is either the rotation matrix of the user-defined PrimaryPart, or if not specified then  a part in the Model chosen by the engine.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetModelSize</string>
            <string name="summary">Returns a Vector3 that is union of the extents of all Parts in the model.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MakeJoints</string>
            <string name="summary">Creates the appropriate SurfaceJoints between all touching Parts contrained within the model. Technically, this function calls MakeJoints() on all Parts inside the model.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MoveTo</string>
            <string name="summary">Moves the centroid of the Model to the specified location, respecting all relative distances between parts in the model.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ResetOrientationToIdentity</string>
            <string name="summary">Rotates all parts in the model to the orientation that was set using SetIdentityOrientation().  If this function has never been called, rotation is reset to GetModelCFrame()'s rotation.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetIdentityOrientation</string>
            <string name="summary">Takes the current rotation matrix of the model and stores it as the model's identity matrix. The rotation is applied when ResetOrientationToIdentity() is called.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TranslateBy</string>
            <string name="summary">Similar to MoveTo(), except instead of moving to an explicit location, we use the model's current CFrame location and offset it.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">makeJoints</string>
            <string name="summary">Use MakeJoints() instead</string>
            <bool name="Deprecated">true</bool>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">move</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use MoveTo() instead</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">PrimaryPart</string>
            <string name="summary">Used to help calculate the Model's CFrame rotation. If this is never assigned to, the engine automatically designates a PrimaryPart to figure out rotations.</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Status</string>
        <string name="ExplorerOrder">10</string>
        <string name="ExplorerImageIndex">2</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">move</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use MoveTo() instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DataModel</string>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Properties>
        </Properties>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Workspace</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">workspace</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use Workspace</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ShowMouse</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use Workspace.IsMouseCursorVisible</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">IsLoaded</string>
            <string name="summary">Returns true if the game has finished loading, false otherwise.  Check this before listening to the Loaded signal to ensure a script knows when a game finishes loading.</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Loaded</string>
            <string name="summary">Fires when the game finishes loading.  Use this to know when to remove your custom loading gui.  It is best to check IsLoaded() before connecting to this event, as the game may load before the event is connected to.</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">get</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use GetObjects() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetPlaceID</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use SetPlaceId() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetCreatorID</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use SetCreatorId() instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">HopperBin</string>
        <string name="ExplorerOrder">24</string>
        <string name="ExplorerImageIndex">22</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Camera</string>
        <string name="ExplorerOrder">5</string>
        <string name="ExplorerImageIndex">5</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CameraSubject</string>
            <string name="summary">Where the Camera's focus is.  Any rotation of the camera will be about this subject.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CameraType</string>
            <string name="summary">Defines how the camera will behave. &lt;a href="http://wiki.roblox.com/index.php/CameraType_(Enum)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CoordinateFrame</string>
            <string name="summary">The current position and rotation of the Camera.  For most CameraTypes, the rotation is set such that the CoordinateFrame lookVector is pointing at the Focus.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FieldOfView</string>
            <string name="summary">The current angle, or width, of what the camera can see.  Current acceptable values are from 20 degrees to 80.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Focus</string>
            <string name="summary">The current CoordinateFrame that the camera is looking at.  Note: it is not always guaranteed that the camera is always looking here.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetRoll</string>
            <string name="summary">Returns the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetRoll</string>
            <string name="summary">Sets the camera's current roll. Roll is defined in radians, and is stored as the delta from the camera's y axis default normal vector.</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Players</string>
        <string name="ExplorerOrder">2</string>
        <string name="ExplorerImageIndex">21</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CharacterAutoLoads</string>
            <bool name="Browsable">true</bool>
            <string name="summary">Set to true, when a player joins a game, they get a character automatically, as well as when they die.  When set to false, characters do not auto load and will only load in using Player:LoadCharacter().</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">players</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use GetPlayers() instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ReplicatedStorage</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">70</string>
        <string name="summary">A container whose contents are replicated to all clients and the server.</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ServerStorage</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">69</string>
        <string name="summary">A container whose contents are only on the server.</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ServerScriptService</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">71</string>
        <string name="summary">A container whose contents should be scripts. Scripts that are added to the container are run on the server.</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Lighting</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">13</string>
        <string name="summary">Responsible for all lighting aspects of the world (affects how things are rendered).</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetMinutesAfterMidnight</string>
            <string name="summary">The number of minutes that the current time is past midnight.  If currently at midnight, returns 0.  Will return decimal values if not at an exact minute.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetMoonDirection</string>
            <string name="summary">Returns the lookVector (Vector3) of the moon. If this lookVector was used in a CFrame, the Part would face the moon.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetMoonPhase</string>
            <string name="summary">Currently always returns 0.75. MoonPhase cannot be edited.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetSunDirection</string>
            <string name="summary">Returns the lookVector (Vector3) of the sun. If this lookVector was used in a CFrame, the Part would face the moon.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetMinutesAfterMidnight</string>
            <string name="summary">Sets the time to be a certain number of minutes after midnight.  This works with integer and decimal values.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Ambient</string>
            <string name="summary">The hue of the global lighting.  Changing this changes the color tint of all objects in the Workspace.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Brightness</string>
            <string name="summary">How much global light each Part in the Workspace receives. Standard range is 0 to 1 (0 being little light), but can be increased all the way to 5 (colors start to be appear very different at this value).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ColorShift_Bottom</string>
            <string name="summary">The hue of global lighting on the bottom surfaces of an object.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ColorShift_Top</string>
            <string name="summary">The hue of global lighting on the top surfaces of an object.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FogColor</string>
            <string name="summary">A Color3 value that changes the hue of distance fog.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FogEnd</string>
            <string name="summary">The distance at which fog completely blocks your vision. This distance is relative to the camera position. Units are in studs</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FogStart</string>
            <string name="summary">The distance at which the fog gradient begins. This distance is relative to the camera position. Units are in studs.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GeographicLatitude</string>
            <string name="summary">The latitude position the level is placed at.  This affects sun position. &lt;a href="http://wiki.roblox.com/index.php/GeographicLatitude_(Property)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GlobalShadows</string>
            <string name="summary">Flag enabling shadows from sun and moon in the place</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">OutdoorAmbient</string>
            <string name="summary">Effective ambient value for outdoors, effectively shadow color outdoors (requires GlobalShadows enabled)</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Outlines</string>
            <string name="summary">Flag enabling or disabling outlines on parts and terrain</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ShadowColor</string>
            <string name="summary">Color the shadows appear as. Shadows are drawn mostly for characters, but depending on the lighting will also show for Parts in the Workspace.  Rendering settings can also affect if shadows are drawn.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TimeOfDay</string>
            <string name="summary">A string that represent the current time of day. Time is in 24-hour clock format "XX::YY:ZZ", where X is hour, Y is minute, and Z is seconds.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">LightingChanged</string>
            <string name="summary">Fired whenever a property of Lighting is changed, or a skybox is added or removed. Skyboxes are of type 'Sky' and should be parented directly to lighting.</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TestService</string>
        <string name="ExplorerOrder">100</string>
        <string name="ExplorerImageIndex">68</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DebuggerManager</string>
        <!-- string name="ExplorerOrder">101</string-->

      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ScriptDebugger</string>
        <!--string name="ExplorerOrder">101</string-->

      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DebuggerBreakpoint</string>
        <!--string name="ExplorerOrder">101</string-->

      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DebuggerWatch</string>
        <!--string name="ExplorerOrder">101</string-->

      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Debris</string>
        <string name="ExplorerOrder">10</string>
        <string name="ExplorerImageIndex">30</string>
        <string name="summary">A service that provides utility in cleaning up objects</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">addItem</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use AddItem() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AddItem</string>
            <string name="summary">Adds an Instance into the debris service that will later be destroyed.  Second argument 'lifetime' is optional and specifies how long (in seconds) to wait before destroying the item. If no time is specified then the item added will automatically be destroyed in 10 seconds.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MaxItems</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. No replacement</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Accoutrement</string>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">32</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Player</string>
        <string name="ExplorerOrder">1</string>
        <string name="ExplorerImageIndex">12</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CharacterAppearance</string>
            <bool name="Browsable">false</bool>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CameraMode</string>
            <string name="summary">An enum that describes how a Player's camera is allowed to behave. &lt;a href="http://wiki.roblox.com/index.php/CameraMode_(Enum)" target="_blank"&gt;More info&lt;/a&gt;.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DataReady</string>
            <string name="summary">Read-only. If true, this Player's persistent data can be loaded, false otherwise. &lt;a href="http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence" target="_blank"&gt;Info on Data Persistence&lt;/a&gt;.</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataFunctions">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">LoadCharacter</string>
            <bool name="Browsable">true</bool>
            <string name="summary">Loads in a new character for this player.  This will replace the player's current character, if they have one. This should be used in conjunction with Players.CharacterAutoLoads to control spawning of characters. This function only works from a server-side script (NOT a LocalScript).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">playerFromCharacter</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Use GetPlayerFromCharacter() instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetUnder13</string>
            <bool name="Deprecated">true</bool>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataYieldFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">WaitForDataReady</string>
            <bool name="Browsable">true</bool>
            <string name="summary">Yields until the persistent data for this Player is ready to be loaded. &lt;a href="http://wiki.roblox.com/index.php/ROBLOX_Scripting_How_To:_Data_Persistence" target="_blank"&gt;Info on Data Persistence&lt;/a&gt;.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetWebPersonalServerRank</string>
            <bool name="IsBackend">true</bool>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataEvents">

        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Idled</string>
            <string name="summary">Fired periodically after the user has been AFK for a while.  Currently this event is only fired for the *local* Player.  "time" is the time in seconds that the user has been idle.</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Workspace</string>
        <string name="ExplorerOrder">1</string>
        <string name="ExplorerImageIndex">19</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FindPartsInRegion3</string>
            <string name="summary">Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FindPartsInRegion3WithIgnoreList</string>
            <string name="summary">Returns parts in the area defined by the Region3, up to specified maxCount or 100, whichever is less</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FindPartOnRay</string>
            <string name="summary">Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">FindPartOnRayWithIgnoreList</string>
            <string name="summary">Return type is (BasePart, Vector3) if the ray hits.  If it misses it will return (nil, PointAtEndOfRay)</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BasePart</string>
        <string name="summary">A structural class, not creatable</string>
        <string name="ExplorerOrder">-1</string>
        <bool name="Browsable">false</bool>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Color</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use BrickColor instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CFrame</string>
            <string name="summary">Contains information regarding the Part's position and a matrix that defines the Part's rotation.  Can read/write. &lt;a href="http://wiki.roblox.com/index.php/Cframe" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">CanCollide</string>
            <string name="summary">Determines whether physical interactions with other Parts are respected.  If true, will collide and react with physics to other Parts.  If false, other parts will pass thru instead of colliding</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Anchored</string>
            <string name="summary">Determines whether or not physics acts upon the Part.  If true, part stays 'Anchored' in space, not moving regardless of any collision/forces acting upon it.  If false, physics works normally on the part.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Elasticity</string>
            <string name="summary">A float value ranging from 0.0f to 1.0f. Sets how much the Part will rebound against another. a value of 1 is like a superball, and 0 is like a lead block.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Friction</string>
            <string name="summary">A float value ranging from 0.0f to 1.0f. Sets how much the Part will be able to slide. a value of 1 is no sliding, and 0 is no friction, so infinite sliding.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Locked</string>
            <string name="summary">Determines whether building tools (in-game and studio) can manipulate this Part.  If true, no editing allowed.  If false, editing is allowed.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Material</string>
            <string name="summary">Specifies the look and feel the Part should have.  Note: this does not define the color the Part is, see BrickColor for that. &lt;a href="http://wiki.roblox.com/index.php/Material_(Enum)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Reflectance</string>
            <string name="summary">Specifies how shiny the Part is. A value of 1 is completely reflective (chrome), while a value of 0 is no reflectance (concrete wall)</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ResizeIncrement</string>
            <string name="summary">Sets the value for the smallest change in size allowable by the Resize(NormalId, int) function.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ResizeableFaces</string>
            <string name="summary">Sets the value for the faces allowed to be resized by the Resize(NormalId, int) function.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Transparency</string>
            <string name="summary">Sets how visible an object is. A value of 1 makes the object invisible, while a value of 0 makes the object opaque.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Velocity</string>
            <string name="summary">How fast the Part is traveling in studs/second. This property is NOT recommended to be modified directly, unless there is good reason.  Otherwise, try using a BodyForce to move a Part.</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">makeJoints</string>
            <string name="summary">Use MakeJoints() instead</string>
            <bool name="Deprecated">true</bool>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MakeJoints</string>
            <string name="summary">Creates the appropriate SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).  This uses the SurfaceTypes defined on the surfaces of parts to create the appropriate welds. &lt;a href="http://wiki.roblox.com/index.php/MakeJoints_(Method)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BreakJoints</string>
            <string name="summary">Destroys SurfaceJoints with all parts that are touching this Instance (including internal joints in the Instance, as in a Model).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetMass</string>
            <string name="summary">Returns a number that is the mass of this Instance.  Mass of a Part is immutable, and is changed only by the size of the Part.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Resize</string>
            <string name="summary">Resizes a Part in the direction of the face defined by 'NormalId', by the amount specified by 'deltaAmount'. If the operation will expand the part to intersect another Instance, the part will not resize at all.  Return true if the call is successful, false otherwise.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">getMass</string>
            <string name="summary">Use GetMass() instead</string>
            <bool name="Deprecated">true</bool>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">OutfitChanged</string>
            <bool name="Deprecated">true</bool>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">LocalSimulationTouched</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use Touched instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">StoppedTouching</string>

            <string name="summary">Deprecated. Use TouchEnded instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TouchEnded</string>
            <string name="summary">Fired when the part stops touching another part</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Part</string>
        <string name="summary">A plastic building block - the fundamental component of ROBLOX</string>
        <string name="ExplorerOrder">11</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TrussPart</string>
        <string name="summary">An extendable building truss</string>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">WedgePart</string>
        <string name="summary">A Wedge Part</string>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PrismPart</string>
        <string name="summary">A Prism Part</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PyramidPart</string>
        <string name="summary">A Pyramid Part</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ParallelRampPart</string>
        <string name="summary">A ParallelRamp Part</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RightAngleRampPart</string>
        <string name="summary">A RightAngleRamp Part</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CornerWedgePart</string>
        <string name="summary">A CornerWedge Part</string>
        <string name="ExplorerOrder">12</string>
        <string name="ExplorerImageIndex">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PlayerGui</string>
        <string name="summary">A container instance that syncs data between a single player and the server.  ScreenGui objects that are placed in this container will be shown to the Player parent only</string>
        <string name="ExplorerOrder">13</string>
        <string name="ExplorerImageIndex">46</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">GuiMain</string>
        <string name="summary">Deprecated, please use ScreenGui</string>
        <bool name="Deprecated">true</bool>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">47</string>
      </Properties>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ScreenGui</string>
        <string name="summary">The core GUI object on which tools are built.  Add Frames/Labels/Buttons to this object to have them rendered as a 2D overlay</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">47</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">FunctionalTest</string>
        <string name="summary">Deprecated. Use TestService instead</string>
        <bool name="Deprecated">true</bool>
        <string name="ExplorerOrder">1</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">BillboardGui</string>
        <string name="summary">A GUI that adorns an object in the 3D world.  Add Frames/Labels/Buttons to this object to have them rendered while attached to a 3D object</string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">64</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Adornee</string>
            <string name="summary">The Object the billboard gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AbsolutePosition</string>
            <string name="summary">A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AbsoluteSize</string>
            <string name="summary">A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Active</string>
            <string name="summary">If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AlwaysOnTop</string>
            <string name="summary">If true, billboard gui does not get occluded by 3D objects, but always renders on the screen.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Enabled</string>
            <string name="summary">If true, billboard gui will render, otherwise rendering will be skipped.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ExtentsOffset</string>
            <string name="summary">A Vector3 (x,y,z) defined in studs that will offset the gui from the extents of the 3d object it is rendering from.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">PlayerToHideFrom</string>
            <string name="summary">Specifies a Player that the BillboardGui will not render to.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">StudsOffset</string>
            <string name="summary">A Vector3 (x,y,z) defined in studs that will offset the gui from the centroid of the 3d object it is rendering from</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SizeOffset</string>
            <string name="summary">A Vector2 (x,y) defined in studs that will offset the gui size from it's current size.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Size</string>
            <string name="summary">A UDim2 value describing the size of the BillboardGui. More information on UDim2 is available &lt;a href="http://wiki.roblox.com/index.php/UDim2" target="_blank"&gt;here&lt;/a&gt;. Relative values are defined as one-to-one with studs.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SurfaceGui</string>
        <string name="summary"> tbd </string>
        <string name="ExplorerOrder">14</string>
        <string name="ExplorerImageIndex">64</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Adornee</string>
            <string name="summary">The Object the billboard gui uses as its base to render from.  Currently, the only way to set this property is thru a script, and must exist in the workspace.  This will only render if the object assigned derives from BasePart.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Active</string>
            <string name="summary">If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Enabled</string>
            <string name="summary">If true, billboard gui will render, otherwise rendering will be skipped.</string>
          </Properties>
        </Item>
      </Item>
      
    </Item>
   
    
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">GuiBase2d</string>
        <bool name="Browsable">false</bool>
      </Properties>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AbsolutePosition</string>
            <string name="summary">A read-only Vector2 value that is the GuiObject's current position (x,y) in pixel space, from the top left corner of the GuiObject.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AbsoluteSize</string>
            <string name="summary">A read-only Vector2 value that is the GuiObject's current size (width, height) in pixel space.</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">GuiObject</string>
        <bool name="Browsable">false</bool>
      </Properties>

      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TweenPosition</string>
            <string name="summary">Smoothly moves a GuiObject from its current position to 'endPosition'. The only required argument is 'endPosition'. &lt;a href="http://wiki.roblox.com/index.php/TweenPosition_(Method)" target="_blank"&gt;More info&lt;/a&gt; </string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TweenSize</string>
            <string name="summary">Smoothly translates a GuiObject's current size to 'endSize'. The only required argument is 'endSize'. &lt;a href="http://wiki.roblox.com/index.php/TweenSize_(Method)" target="_blank"&gt;More info&lt;/a&gt; </string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TweenSizeAndPosition</string>
            <string name="summary">Smoothly translates a GuiObject's current size to 'endSize', and also smoothly translates the GuiObject's current position to 'endPosition'. The only required arguments are 'endSize' and 'endPosition'. &lt;a href="http://wiki.roblox.com/index.php/TweenSizeAndPosition_(Method)" target="_blank"&gt;More info&lt;/a&gt; </string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Active</string>
            <string name="summary">If true, this GuiObject can fire mouse events and will pass them to any GuiObjects layered underneath, while false will do neither.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BackgroundColor3</string>
            <string name="summary">A Color3 value that specifies the background color for the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BackgroundTransparency</string>
            <string name="summary">A number value that specifies how transparent the background of the GuiObject is. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BorderColor3</string>
            <string name="summary">A Color3 value that specifies the color of the outline of the GuiObject. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BorderSizePixel</string>
            <string name="summary">A number value that specifies the thickness (in pixels) of the outline of the GuiObject. Currently this value can only be set to either 0 or 1, any other number has no effect. This value is ignored if the Style property (not found on all GuiObjects) is set to something besides custom.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ClipsDescendants</string>
            <string name="summary">If set to true, any descendants of this GuiObject will only render if contained within it's borders. If set to false, all descendants will render regardless of position.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Draggable</string>
            <string name="summary">If true, allows a GuiObject to be dragged by the user's mouse. The events 'DragBegin' and 'DragStopped' are fired when the appropriate action happens, and only will fire on Draggable=true GuiObjects.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Size</string>
            <string name="summary">A UDim2 value describing the size of the GuiObject on screen in both absolute and relative coordinates. More information on UDim2 is available &lt;a href="http://wiki.roblox.com/index.php/UDim2" target="_blank"&gt;here&lt;/a&gt;.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Position</string>
            <string name="summary">A UDim2 value describing the position of the top-left corner of the GuiObject on screen. More information on UDim2 is available &lt;a href="http://wiki.roblox.com/index.php/UDim2" target="_blank"&gt;here&lt;/a&gt;.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SizeConstraint</string>
            <string name="summary">The direction(s) that an object can be resized in. &lt;a href="http://wiki.roblox.com/index.php/SizeConstraint_(Enum)" target="_blank"&gt;More info&lt;/a&gt;.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">ZIndex</string>
            <string name="summary">Describes the ordering in which overlapping GuiObjects will be drawn. A value of 1 is drawn first, while higher values are drawn in ascending order (each value draws over the last).</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BackgroundColor</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use BackgroundColor3 instead</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">BorderColor</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use BorderColor3 instead</string>
          </Properties>
        </Item>
      </Item>

      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DragBegin</string>
            <string name="summary">Fired when a GuiObject with Draggable set to true starts to be dragged. 'InitialPosition' is a UDim2 value of the position of the GuiObject before any drag operation began.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">DragStopped</string>
            <string name="summary">Always fired after a DragBegin event, DragStopped is fired when the user releases the mouse button causing a drag operation on the GuiObject. Arguments 'x', and 'y' specify the top-left absolute position of the GuiObject when the event is fired.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseEnter</string>
            <string name="summary">Fired when the mouse enters a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseLeave</string>
            <string name="summary">Fired when the mouse leaves a GuiObject, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseMoved</string>
            <string name="summary">Fired when the mouse is inside a GuiObject and moves, as long as the GuiObject is active (see active property for more detail). Arguments 'x', and 'y' specify the absolute pixel position of the mouse.</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NotificationBox</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">NotificationObject</string>
        <bool name="Browsable">false</bool>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Frame</string>
        <string name="summary">A container object used to layout other GUI objects</string>
        <string name="ExplorerOrder">15</string>
        <string name="ExplorerImageIndex">48</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Style</string>
            <string name="summary">Determines how a frame will look. Uses Enum.FrameStyle. &lt;a href="http://wiki.roblox.com/index.php/Framestyle" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ImageLabel</string>
        <string name="summary">A GUI object containing an Image</string>
        <string name="ExplorerOrder">18</string>
        <string name="ExplorerImageIndex">49</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Image</string>
            <string name="summary">Specifies the id of the texture to display. &lt;a href="http://wiki.roblox.com/index.php/Image" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TextLabel</string>
        <string name="summary">A GUI object containing text</string>
        <string name="ExplorerOrder">19</string>
        <string name="ExplorerImageIndex">50</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TextColor</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use TextColor3 instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TextButton</string>
        <string name="summary">A GUI button containing text</string>
        <string name="ExplorerOrder">17</string>
        <string name="ExplorerImageIndex">51</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TextColor</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use TextColor3 instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TextBox</string>
        <string name="summary">A text entry box</string>
        <string name="ExplorerOrder">17</string>
        <string name="ExplorerImageIndex">51</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">TextColor</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">Deprecated. Use TextColor3 instead</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">GuiButton</string>
        <string name="summary">A GUI button containing an Image</string>
        <bool name="Browsable">false</bool>
        <string name="ExplorerOrder">16</string>
        <string name="ExplorerImageIndex">52</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">AutoButtonColor</string>
            <string name="summary">Determines whether a button changes color automatically when reacting to mouse events.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Modal</string>
            <string name="summary">Allows the mouse to be free in first person mode. If a button with this property set to true is visible, the mouse is 'free' in first person mode.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Style</string>
            <string name="summary">Determines how a button will look, including mouse event states. Uses Enum.ButtonStyle. &lt;a href="http://wiki.roblox.com/index.php/ButtonStyle_(Enum)" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
      </Item>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseButton1Click</string>
            <string name="summary">Fired when the mouse is over the button, and the mouse down and up events fire without the mouse leaving the button.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseButton1Down</string>
            <string name="summary">Fired when the mouse button is pushed down on a button.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseButton1Up</string>
            <string name="summary">Fired when the mouse button is released on a button.</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseButton2Click</string>
            <string name="summary">This function currently does not work :(</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseButton2Down</string>
            <string name="summary">This function currently does not work :(</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">MouseButton2Up</string>
            <string name="summary">This function currently does not work :(</string>
          </Properties>
        </Item>
      </Item>
    </Item>

    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ImageButton</string>
        <string name="summary">A GUI button containing an Image</string>
        <string name="ExplorerOrder">16</string>
        <string name="ExplorerImageIndex">52</string>
        <string name="PreferredParent">StarterGui</string>
      </Properties>
      <Item class="ReflectionMetadataProperties">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Image</string>
            <string name="summary">Specifies the asset id of the texture to display. &lt;a href="http://wiki.roblox.com/index.php/Image" target="_blank"&gt;More info&lt;/a&gt;</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Handles</string>
        <string name="summary">A 3D GUI object to represent draggable handles</string>

        <string name="ExplorerOrder">19</string>
        <string name="ExplorerImageIndex">53</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ArcHandles</string>
        <string name="summary">A 3D GUI object to represent draggable arc handles</string>

        <string name="ExplorerOrder">20</string>
        <string name="ExplorerImageIndex">56</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SelectionBox</string>
        <string name="summary">A 3D GUI object to represent the visible selection around an object</string>
        <string name="ExplorerOrder">21</string>
        <string name="ExplorerImageIndex">54</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SurfaceSelection</string>
        <string name="summary">A 3D GUI object to represent the visible selection around a face of an object</string>
        <string name="ExplorerOrder">21</string>
        <string name="ExplorerImageIndex">55</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Configuration</string>
        <string name="summary">An object that can be placed under parts to hold Value objects that represent that part's configuration</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">58</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SelectionPartLasso</string>
        <string name="summary">A visual line drawn representation between two part objects</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">57</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SelectionPointLasso</string>
        <string name="summary">A visual line drawn representation between two positions</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">57</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PartPairLasso</string>
        <string name="summary">A visual line drawn representation between two parts.</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">57</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Pose</string>
        <string name="summary">The pose of a joint relative to it's parent part in a keyframe</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">60</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Keyframe</string>
        <string name="summary">One keyframe of an animation</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">60</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Animation</string>
        <string name="summary">Represents a linked animation object, containing keyframes and poses.</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">60</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">AnimationTrack</string>
        <string name="summary">Returned by a call to LoadAnimation. Controls the playback of an animation on a Humanoid.</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">60</string>
      </Properties>
      <Item class="ReflectionMetadataEvents">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">Stopped</string>
            <bool name="Deprecated">true</bool>
            <string name="summary">This event is never raised</string>
          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">AnimationController</string>
        <string name="summary">Allows animations to be played on joints of the parent object.</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">60</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">CharacterMesh</string>
        <string name="summary">Modifies the appearance of a body part.</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">60</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Dialog</string>
        <string name="summary">An object used to make dialog trees to converse with players</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">62</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">DialogChoice</string>
        <string name="summary">An object used to make dialog trees to converse with players</string>
        <string name="ExplorerOrder">22</string>
        <string name="ExplorerImageIndex">63</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">Terrain</string>
        <string name="summary">Object representing a high performance bounded grid of static 4x4 parts</string>
        <bool name="Browsable">true</bool>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">65</string>
      </Properties>
      <Item class="ReflectionMetadataFunctions">
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetCell</string>
            <string name="summary">Returns CellMaterial, CellBlock, CellOrientation</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">GetWaterCell</string>

            <string name="summary">Returns hasAnyWater, WaterForce, WaterDirection</string>
          </Properties>
        </Item>
        <Item class="ReflectionMetadataMember">
          <Properties>
            <string name="Name">SetWaterCell</string>

          </Properties>
        </Item>
      </Item>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">PointLight</string>
        <string name="summary">Makes the parent part emit light in a spherical shape</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">13</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">SpotLight</string>
        <string name="summary">Makes the parent part emit light in a conical shape</string>
        <string name="ExplorerOrder">3</string>
        <string name="ExplorerImageIndex">13</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RemoteFunction</string>
        <string name="summary">Allow functions defined in one script to be called by another script across client/server boundary</string>
        <string name="ExplorerOrder">4</string>
        <string name="ExplorerImageIndex">66</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">RemoteEvent</string>
        <string name="summary">Allow events defined in one script to be subscribed to by another script across client/server boundary</string>
        <string name="ExplorerOrder">5</string>
        <string name="ExplorerImageIndex">67</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">TerrainRegion</string>
        <string name="summary">Object representing a snapshot of the region of terrain</string>
        <bool name="Browsable">true</bool>
        <string name="ExplorerOrder">0</string>
        <string name="ExplorerImageIndex">65</string>
      </Properties>
    </Item>
    <Item class="ReflectionMetadataClass">
      <Properties>
        <string name="Name">ModuleScript</string>
        <string name="summary">A script fragment. Only runs when another script uses require() on it.</string>
        <string name="ExplorerOrder">5</string>
        <string name="ExplorerImageIndex">66</string>
      </Properties>
    </Item>
  </Item>
</roblox>
