varying vec3 xlv_TEXCOORD6;
varying vec4 xlv_TEXCOORD4;
varying vec4 xlv_TEXCOORD3;
varying vec4 xlv_TEXCOORD2;
varying vec4 xlv_COLOR0;
varying vec4 xlv_TEXCOORD1;
varying vec4 xlv_TEXCOORD0;
uniform sampler2D SpecularMap;
uniform samplerCube EnvironmentMap;
uniform sampler2D NormalMap;
uniform sampler3D LightMap;
uniform sampler2D StudsMap;
uniform vec2 OutlineBrightness;
uniform vec4 LightBorder;
uniform vec4 LightConfig3;
uniform vec4 LightConfig2;
uniform vec3 FogColor;
uniform vec3 AmbientColor;
uniform vec3 Lamp1Color;
uniform vec3 Lamp0Color;
uniform vec3 Lamp0Dir;
void main ()
{
  vec4 oColor0_1;
  vec4 albedo_2;
  float tmpvar_3;
  tmpvar_3 = clamp ((1.0 - xlv_TEXCOORD3.w), 0.0, 1.0);
  vec3 albedo_4;
  vec3 normal_5;
  vec2 tmpvar_6;
  tmpvar_6 = ((texture2D (NormalMap, xlv_TEXCOORD0.xy).wy * 2.0) - 1.0);
  vec3 tmpvar_7;
  tmpvar_7.xy = tmpvar_6;
  tmpvar_7.z = sqrt(clamp ((1.0 + dot (-(tmpvar_6), tmpvar_6)), 0.0, 1.0));
  normal_5.z = tmpvar_7.z;
  normal_5.xy = (tmpvar_6 * tmpvar_3);
  albedo_4 = (xlv_COLOR0.xyz * (texture2D (StudsMap, xlv_TEXCOORD1.xy).xyz * 2.0));
  vec4 tmpvar_8;
  tmpvar_8 = mix (texture2D (SpecularMap, (xlv_TEXCOORD0.xy * 0.25)), texture2D (SpecularMap, xlv_TEXCOORD0.xy), vec4(clamp (((tmpvar_3 * 4.0) - 3.0), 0.0, 1.0)));
  vec2 tmpvar_9;
  tmpvar_9 = mix (vec2(1.0, 190.0), ((tmpvar_8.xy * vec2(1.2, 256.0)) + vec2(0.0, 0.01)), vec2(tmpvar_3));
  vec4 tmpvar_10;
  tmpvar_10.xyz = albedo_4;
  tmpvar_10.w = xlv_COLOR0.w;
  albedo_2.w = tmpvar_10.w;
  vec3 tmpvar_11;
  tmpvar_11 = normalize((((normal_5.x * xlv_TEXCOORD6) + (normal_5.y * ((xlv_TEXCOORD4.yzx * xlv_TEXCOORD6.zxy) - (xlv_TEXCOORD4.zxy * xlv_TEXCOORD6.yzx)))) + (tmpvar_7.z * xlv_TEXCOORD4.xyz)));
  float tmpvar_12;
  tmpvar_12 = dot (tmpvar_11, -(Lamp0Dir));
  vec3 tmpvar_13;
  tmpvar_13 = abs((xlv_TEXCOORD2.xyz - LightConfig2.xyz));
  vec3 t_14;
  t_14.x = float((tmpvar_13.x >= LightConfig3.x));
  t_14.y = float((tmpvar_13.y >= LightConfig3.y));
  t_14.z = float((tmpvar_13.z >= LightConfig3.z));
  float tmpvar_15;
  tmpvar_15 = clamp (dot (t_14, vec3(1.0, 1.0, 1.0)), 0.0, 1.0);
  vec4 tmpvar_16;
  tmpvar_16 = mix (texture3D (LightMap, (xlv_TEXCOORD2.yzx - (xlv_TEXCOORD2.yzx * tmpvar_15))), LightBorder, vec4(tmpvar_15));
  vec3 i_17;
  i_17 = -(xlv_TEXCOORD3.xyz);
  albedo_2.xyz = mix (albedo_4, textureCube (EnvironmentMap, (i_17 - (2.0 * (dot (tmpvar_11, i_17) * tmpvar_11)))).xyz, vec3(((tmpvar_8.y * tmpvar_3) * 0.3)));
  oColor0_1.xyz = ((((AmbientColor + (((clamp (tmpvar_12, 0.0, 1.0) * Lamp0Color) + (max (-(tmpvar_12), 0.0) * Lamp1Color)) * tmpvar_16.w)) + tmpvar_16.xyz) * albedo_2.xyz) + (Lamp0Color * (((float((tmpvar_12 >= 0.0)) * tmpvar_9.x) * tmpvar_16.w) * pow (clamp (dot (tmpvar_11, normalize((-(Lamp0Dir) + normalize(xlv_TEXCOORD3.xyz)))), 0.0, 1.0), tmpvar_9.y))));
  oColor0_1.w = albedo_2.w;
  vec2 tmpvar_18;
  tmpvar_18 = min (xlv_TEXCOORD0.wz, xlv_TEXCOORD1.wz);
  float tmpvar_19;
  tmpvar_19 = (min (tmpvar_18.x, tmpvar_18.y) / xlv_TEXCOORD3.w);
  oColor0_1.xyz = (oColor0_1.xyz * clamp (((clamp (((xlv_TEXCOORD3.w * OutlineBrightness.x) + OutlineBrightness.y), 0.0, 1.0) * (1.5 - tmpvar_19)) + tmpvar_19), 0.0, 1.0));
  oColor0_1.xyz = mix (FogColor, oColor0_1.xyz, vec3(clamp (xlv_TEXCOORD2.w, 0.0, 1.0)));
  gl_FragData[0] = oColor0_1;
}

