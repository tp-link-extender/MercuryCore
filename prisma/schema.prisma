// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Sections are commented out, not yet implemented

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// Users & Groups

model User {
    username        String         @unique
    displayname     String?
    bio             String?
    image           String?
    password        String?
    created         DateTime       @default(now())
    lastOnline      DateTime       @default(now())
    Status          String?
    currency        Int            @default(0)
    friends         User[]         @relation("friends")
    friendsRelation User[]         @relation("friends")
    // groupsOwned  Group[] @relation("owner")
    // groupsJoined Group[] @relation("member")
    places          Place[]
    // posts       Post[]
    idToken         String

    @@id([username])
}

model RefreshToken {
    token        String @unique
    userUsername String?
}

// model Group {
//     name          String        @unique
//     owner         User          @relation(name: "owner", fields: [ownerUsername], references: [username])
//     ownerUsername String
//     members       User[] @relation("member")
//     places        GroupPlace[]
// 	posts         GroupPost[]

//     @@id([name])
// }

// Places

model Place {
    name          String
    owner         User   @relation(fields: [ownerUsername], references: [username])
    ownerUsername String
    description   String
    image         String

    created DateTime @default(now())
    updated DateTime @default(now())

    @@id([name, ownerUsername])
}

// model GroupPlace {
//     name        String
//     owner       Group  @relation(fields: [groupName], references: [name])
//     description String
//     groupName   String

//     created DateTime @default(now())
//     updated DateTime @default(now())

//     @@id([name, groupName])
// }

// Posts

// model Post {
//     id           Int      @id @default(autoincrement())
//     Poster       User     @relation(fields: [userUsername], references: [username])
//     userUsername String
//     posted       DateTime @default(now())
// }
// model GroupPost {
//     id           Int      @id @default(autoincrement())
//     Poster       Group     @relation(fields: [groupName], references: [name])
//     groupName String
//     posted       DateTime @default(now())
// }
